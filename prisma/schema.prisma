generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Cliente {
  cpf          String        @id
  senha        String
  nome         String
  tel          String
  email        String
  plano        Plano
  vencimento   Float
  agendamentos Agendamento[]
  enderecos    Endereco[]
  salas        Sala[]
}

model Funcionario {
  cpf     String  @id
  senha   String
  nome    String
  tel     String
  email   String
  funcao  Funcao
  working Boolean @default(false)
  salas   Sala[]
}

model Endereco {
  id        Int     @id @default(autoincrement())
  clienteId String
  endereco  String
  cep       String
  cidade    String
  estado    String
  cliente   Cliente @relation(fields: [clienteId], references: [cpf])
}

model Sala {
  id            Int         @id @default(autoincrement())
  nome          String
  clienteId     String
  funcionarioId String
  status        StatusSala
  mensagens     Mensagem[]
  cliente       Cliente     @relation(fields: [clienteId], references: [cpf])
  funcionario   Funcionario @relation(fields: [funcionarioId], references: [cpf])
}

model Mensagem {
  id        Int         @id @default(autoincrement())
  msg       String
  salaId    Int
  senderId  String
  timestamp DateTime    @default(now())
  type      MessageType
  sala      Sala        @relation(fields: [salaId], references: [id])
}

model Agendamento {
  id         Int      @id @default(autoincrement())
  data       DateTime
  descricao  String
  clienteCpf String
  status     Status   @default(AGENDADO)
  cliente    Cliente  @relation(fields: [clienteCpf], references: [cpf])
}

enum Plano {
  MB100
  MB300
  MB500
}

enum Funcao {
  ADMINISTRATIVO
  TECNICO
  GERENTE
}

enum Status {
  AGENDADO
  CONCLUIDO
  CANCELADO
}

enum StatusSala {
  ABERTA
  FECHADA
}

enum MessageType {
  TEXT
  IMAGE
}
